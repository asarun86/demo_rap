managed with additional save implementation in class ZBP_I_REFERENCEUSERMASTER_S unique;
strict;
with draft;

define behavior for ZI_ReferenceUserMaster_S alias ReferenceUserMasAll
draft table ZPIB_REF_USE_D_S
with unmanaged save
lock master total etag LastChangedAtMax
authorization master( global )

{
  field ( readonly )
   SingletonID;


  update;
  internal create;
  internal delete;

  draft action ( features : instance ) Edit;
  draft action Activate optimized;
  draft action Discard;
  draft action Resume;
  draft determine action Prepare;
  action ( features : instance ) SelectCustomizingTransptReq parameter D_SelectCustomizingTransptReqP result [1] $self;

  association _ReferenceUserMaster { create ( features : instance ); with draft; }
}

define behavior for ZI_ReferenceUserMaster alias ReferenceUserMaster
persistent table ZPIB_REF_USER
draft table ZPIB_REF_USER_D
etag master LocalLastChangedAt
lock dependent by _ReferenceUserMasAll
authorization dependent by _ReferenceUserMasAll

{
  field ( mandatory : create )
   UserId;

  field ( readonly )
   SingletonID,
   CreatedAt,
   CreatedBy,
   LastChangedBy,
   LastChangedAt,
   LocalLastChangedAt;

  field ( readonly : update )
   UserId;


  update( features : global );
  delete( features : global );

  factory action ( features : instance ) CopyReferenceUserMaster parameter ZD_CopyReferenceUserMasterP [1];

  mapping for ZPIB_REF_USER
  {
    UserId = USER_ID;
    UserName = USER_NAME;
    Bu = BU;
    CreatedAt = CREATED_AT;
    CreatedBy = CREATED_BY;
    LastChangedBy = LAST_CHANGED_BY;
    LastChangedAt = LAST_CHANGED_AT;
    LocalLastChangedAt = LOCAL_LAST_CHANGED_AT;
  }

  association _ReferenceUserMasAll { with draft; }

  validation ValidateTransportRequest on save ##NOT_ASSIGNED_TO_DETACT { create; update; delete; }
}